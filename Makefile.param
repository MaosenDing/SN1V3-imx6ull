# Makefile.param 
# Only global variable should be defined here.
# All the variables must be used as "export" and "?=".
# Otherwise, there will be some errors, when Makefile.param is nested.

# use HIARCH indicate chip, use libc to choose cross compiler.
export HIARCH?=hi3516cv300
export LIBC?=uclibc

# Whether open -g 
#export HIGDB?=y
export HIGDB?=n

export MPILIBTAIL?=a


# FPGA board or not
export FPGA?=n

# cpu type single/big-little
ifeq ($(HIARCH),$(filter $(HIARCH), hi3519 hi3519v101 hi3516av200))
export CPU_TYPE?=big-little
else
export CPU_TYPE?=
endif

ifeq ($(HIARCH),hi3516cv300)
	export HICHIP?=0x3516C300
	export ARCH_DIR?=hi3516cv300
	export EXTDRVVER?=hi3516cv300
	export INTERDRVVER?=hi3516cv300
endif

# Whether support the debug information. HI_DEBUG or HI_RELEASE
export HIDBG?=HI_RELEASE

ifeq ($(HIDBG),HI_DEBUG)
	DBG_FLAG=1
else
	DBG_FLAG=0
endif

ifeq ($(FPGA),y)
	export HI_FPGA:=HI_FPGA
	export EXTDRV:=drv/extdrv/$(EXTDRVVER)
else
	export HI_FPGA:=HI_XXXX
	export EXTDRV:=drv/extdrv/$(EXTDRVVER)
endif

############################# 工程主要路径 #############################
#顶层路径
#btmPath = /home/ririyeye/Desktop/share/SN1V2
#btmPath = /home/work/nfs/hi3516/SN1V2
btmPath = /home/ririyeye/Desktop/share/SN1V2

#配置参数
export PARAM_FILE

#用户app目录
export APP_DIR := $(btmPath)/app

#海思头文件路径
export REL_INC := $(btmPath)/include

#海思Lib库路径
export REL_LIB := $(btmPath)/lib

#海思ko路径
export REL_KO  := $(btmPath)/ko

############################### 编译环境 ############################
export cross = arm-hisiv500-linux-
#export cross = arm-linux-gnueabi-
export cc = $(cross)gcc
export cxx = $(cross)g++
export cstrip = $(cross)strip
export cld = $(cross)ld
ar = $(cross)ar
export OBJCOPY = $(cross)objcopy


############################### 外部库加载 ###########################
#jpg编解码库
ifeq ($(cross), arm-hisiv500-linux-)
export extern_lib += $(APP_DIR)/jpgInc/libjpeg.so.9.3.0
else
export extern_lib += $(APP_DIR)/../jpgInc-glibc/libjpeg.so.9.3.0
endif
export extern_lib += $(APP_DIR)/libCRE.a
############################## 外部库头文件 ##########################
#顶层共用
com_inc := -I $(APP_DIR)
com_inc += -I $(APP_DIR)/sensorProcess

#jpg编解码
ifeq ($(cross), arm-hisiv500-linux-)
jpg_inc := -I $(APP_DIR)/jpgInc
else
jpg_inc := -I $(APP_DIR)/../jpgInc-glibc/
endif
#海思库
hs_inc := -I $(REL_INC)

#glog
ifeq ($(cross), arm-hisiv500-linux-)
glog_inc := -I $(APP_DIR)/glog
extern_lib += -L $(APP_DIR)/glog -lglog
else
glog_inc := -I $(APP_DIR)/../glog-glibc
extern_lib += -L $(APP_DIR)/../glog-glibc -lglog
endif
#run dir
export cpdir := $(APP_DIR)/556_bk

#编译环境包含头文件
export cincPath = $(com_inc) $(jpg_inc) $(hs_inc)
export cppincPath = $(com_inc) $(jpg_inc) $(hs_inc) $(glog_inc)

#C/C++编译环境
#backtrace = -fno-omit-frame-pointer -mapcs -rdynamic
cpuFlag = -mcpu=arm926ej-s
comFlag = -mno-unaligned-access -fno-aggressive-loop-optimizations $(cpuFlag) -g3  $(backtrace)

#非优化
export cflagsORG = -Wall $(cincPath) -std=c99 $(comFlag)
cflagsORG += -D$(HIARCH) -DHICHIP=$(HICHIP) -DSENSOR_TYPE=$(SENSOR_TYPE) -D$(HIDBG) -D$(HI_FPGA) 

export cppflagsORG = -Wall $(cppincPath) -std=c++11 $(comFlag) 
cppflagsORG += -D$(HIARCH) -DHICHIP=$(HICHIP) -DSENSOR_TYPE=$(SENSOR_TYPE) -D$(HIDBG) -D$(HI_FPGA) 

#添加优化选项
export cflags = $(cflagsORG) -O2
export cppflags = $(cppflagsORG) -O2

export linkFlag = -Wall -lpthread -lm -ldl $(extern_lib) $(SENSOR_LIBS) $(AUDIO_LIBS) $(MPI_LIBS)
#export linkFlag = -Wall -lpthread -lm -ldl $(extern_lib)

export linkFlag += -Wl,-rpath=$(btmPath)/spclib/
export shareflags = -fPIC -shared

############################# 海思相关配置 ##############################
#主控型号选择
#CHIP_ID ?= CHIP_HI3516C_V300
CHIP_ID ?= CHIP_HI3516E_V100

ifeq ($(CHIP_ID), CHIP_HI3516C_V300)
	cflags += -Dhi3516cv300
	cppflags += -Dhi3516cv300
endif
ifeq ($(CHIP_ID), CHIP_HI3516E_V100)
	cflags += -Dhi3516ev100
	cppflags += -Dhi3516ev100
endif

################# select sensor type for your sample ####################
#SENSOR_TYPE ?= SONY_IMX290_MIPI_1080P_30FPS
#SENSOR_TYPE ?= SMARTSENS_SC2235_CMOS_1080P_20FPS
#SENSOR_TYPE ?= OMNIVISION_OV2718_MIPI_1080P_30FPS
SENSOR_TYPE ?= SMARTSENS_SC2232_CMOS_1080P_20FPS

########################### 海思LIBS选择 ################################
#1.SENSOR_LIBS

	SENSOR_LIBS := -L $(REL_LIB) -lisp

ifeq ($(SENSOR_TYPE), SONY_IMX290_MIPI_1080P_30FPS)
	SENSOR_LIBS += -lbsns_imx290
endif

ifeq ($(SENSOR_TYPE), SMARTSENS_SC2235_CMOS_1080P_20FPS)
    SENSOR_LIBS += $(REL_LIB)/libsns_sc2235.so
endif 

ifeq ($(SENSOR_TYPE), OMNIVISION_OV2718_MIPI_1080P_30FPS)
    SENSOR_LIBS += $(REL_LIB)/libsns_ov2718.so
endif

ifeq ($(SENSOR_TYPE), SMARTSENS_SC2232_CMOS_1080P_20FPS)
	SENSOR_LIBS += -lsns_sc2232
endif

#2.3A相关库

SENSOR_LIBS += -l_hiae
SENSOR_LIBS += -l_hiawb
SENSOR_LIBS += -l_hiaf
SENSOR_LIBS += -l_hidefog

#3.MPI_LIBS
MPI_LIBS := -L $(REL_LIB) -lmpi
#MPI_LIBS += -live.so
#MPI_LIBS += -lmd.so

#4.AUDIO_LIBS

AUDIO_LIBS := -L $(REL_LIB) -lVoiceEngine
AUDIO_LIBS += -lupvqe
AUDIO_LIBS += -ldnvqe

# End!!
